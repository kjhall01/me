{"version":3,"sources":["colors.js","logo.svg","fade-in-section.js","App.js","reportWebVitals.js","index.js"],"names":["FadeInSection","props","React","useState","isVisible","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","className","ref","children","App","colors","map","color","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNACe,G,MCDA,I,MDCA,CACb,aACA,OACA,SACA,uBACA,QACA,aACA,eACA,aACA,WACA,YACA,cACA,YACA,OACA,iBACA,YACA,UACA,WACA,QACA,gBACA,cACA,gBACA,MACA,aACA,SACA,cACA,SACA,cACA,UACA,OACA,iBACA,kBACA,YACA,aACA,kBACA,gBACA,iBACA,cACA,WACA,QACA,QACA,WACA,SACA,eACA,aACA,YACA,aACA,aACA,QACA,aACA,gBACA,YACA,aACA,cACA,UACA,WACA,aACA,aACA,eACA,gBACA,UACA,QACA,YACA,SACA,YACA,WACA,cACA,UACA,YACA,YACA,YACA,OACA,kBACA,gBACA,eACA,YACA,UACA,aACA,YACA,QACA,gBACA,cACA,OACA,eACA,WACA,YACA,SACA,aACA,WACA,OACA,YACA,YACA,SACA,UACA,QACA,YACA,WACA,UACA,YACA,cACA,YACA,YACA,cACA,OACA,YACA,YACA,QACA,YACA,YACA,YACA,cACA,SACA,mBACA,YACA,QACA,UACA,OACA,SACA,UACA,YACA,eACA,OACA,SACA,oBACA,iBACA,gBACA,iBACA,gBACA,iBACA,OACA,gBACA,QACA,gBACA,eACA,WACA,OACA,SACA,YACA,YACA,iBACA,WACA,aACA,YACA,OACA,aACA,QACA,MACA,SACA,S,aE7HaA,MApBf,SAAuBC,GAAQ,IAAD,EACIC,IAAMC,UAAS,GADnB,mBACrBC,EADqB,KACVC,EADU,KAEtBC,EAASJ,IAAMK,SAQrB,OAPAL,IAAMM,WAAU,WACd,IAAMC,EAAW,IAAIC,sBAAqB,SAAAC,GACxCA,EAAQC,SAAQ,SAAAC,GAAK,OAAIR,EAAWQ,EAAMC,sBAG5C,OADAL,EAASM,QAAQT,EAAOU,SACjB,kBAAMP,EAASQ,UAAUX,EAAOU,YACtC,IAED,qBACEE,UAAS,0BAAqBd,EAAY,aAAe,IACzDe,IAAKb,EAFP,SAIGL,EAAMmB,YCwBEC,MAhBf,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,qDAECI,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,UACE,qBAAKN,UAAU,MAAMO,MAAO,CAAEC,gBAAiBF,GAA/C,SACE,+BAAOA,OAFSA,UCrBbG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2e63e98.chunk.js","sourcesContent":["/* Borrowed from http://colours.neilorangepeel.com */\nexport default [\n  'whitesmoke',\n  'snow',\n  'tomato',\n  'lightgoldenrodyellow',\n  'brown',\n  'lightcoral',\n  'darkseagreen',\n  'chartreuse',\n  'darkblue',\n  'mistyrose',\n  'saddlebrown',\n  'darkkhaki',\n  'gray',\n  'cornflowerblue',\n  'limegreen',\n  'hotpink',\n  'deeppink',\n  'coral',\n  'palevioletred',\n  'springgreen',\n  'palegoldenrod',\n  'red',\n  'papayawhip',\n  'purple',\n  'darkmagenta',\n  'silver',\n  'greenyellow',\n  'oldlace',\n  'navy',\n  'lightsteelblue',\n  'mediumvioletred',\n  'darkgreen',\n  'darksalmon',\n  'mediumturquoise',\n  'darkslategray',\n  'blanchedalmond',\n  'floralwhite',\n  'lavender',\n  'green',\n  'wheat',\n  'seagreen',\n  'bisque',\n  'mediumpurple',\n  'lightgreen',\n  'lightpink',\n  'darkorange',\n  'darkviolet',\n  'white',\n  'blueviolet',\n  'darkgoldenrod',\n  'lawngreen',\n  'mediumblue',\n  'forestgreen',\n  'crimson',\n  'cornsilk',\n  'powderblue',\n  'sandybrown',\n  'mediumorchid',\n  'rebeccapurple',\n  'darkred',\n  'azure',\n  'peachpuff',\n  'salmon',\n  'lightblue',\n  'seashell',\n  'deepskyblue',\n  'thistle',\n  'slateblue',\n  'burlywood',\n  'lightgray',\n  'gold',\n  'mediumslateblue',\n  'lightseagreen',\n  'lemonchiffon',\n  'palegreen',\n  'dimgrey',\n  'dodgerblue',\n  'goldenrod',\n  'linen',\n  'paleturquoise',\n  'lightyellow',\n  'lime',\n  'lightskyblue',\n  'darkgray',\n  'lightcyan',\n  'yellow',\n  'darkorchid',\n  'honeydew',\n  'peru',\n  'indianred',\n  'slategrey',\n  'violet',\n  'fuchsia',\n  'ivory',\n  'cadetblue',\n  'darkgrey',\n  'skyblue',\n  'slategray',\n  'lightsalmon',\n  'aliceblue',\n  'chocolate',\n  'yellowgreen',\n  'pink',\n  'turquoise',\n  'steelblue',\n  'black',\n  'firebrick',\n  'olivedrab',\n  'orangered',\n  'navajowhite',\n  'orange',\n  'mediumaquamarine',\n  'royalblue',\n  'olive',\n  'magenta',\n  'plum',\n  'indigo',\n  'dimgray',\n  'lightgrey',\n  'antiquewhite',\n  'cyan',\n  'orchid',\n  'mediumspringgreen',\n  'lightslategrey',\n  'darkturquoise',\n  'darkolivegreen',\n  'lavenderblush',\n  'lightslategray',\n  'grey',\n  'darkslategrey',\n  'beige',\n  'darkslateblue',\n  'midnightblue',\n  'moccasin',\n  'aqua',\n  'maroon',\n  'rosybrown',\n  'mintcream',\n  'mediumseagreen',\n  'darkcyan',\n  'aquamarine',\n  'gainsboro',\n  'blue',\n  'ghostwhite',\n  'khaki',\n  'tan',\n  'sienna',\n  'teal',\n];\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import './fade-in-section.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction FadeInSection(props) {\n  const [isVisible, setVisible] = React.useState(true);\n  const domRef = React.useRef();\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n    observer.observe(domRef.current);\n    return () => observer.unobserve(domRef.current);\n  }, []);\n  return (\n    <div\n      className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default FadeInSection;\n","import logo from './logo.svg';\nimport './App.css';\n\nimport colors from './colors';\nimport FadeInSection from './fade-in-section.js'\n/***\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n} ***/\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>All the CSS colors!</h1>\n\n      {colors.map(color => (\n        <FadeInSection key={color}>\n          <div className=\"box\" style={{ backgroundColor: color }}>\n            <span>{color}</span>\n          </div>\n        </FadeInSection>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}